Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.sailing_tracker\">\r\n    <uses-feature android:name=\"android.hardware.camera\"\r\n        android:required=\"true\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\r\n        tools:ignore=\"ScopedStorage\" />\r\n    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />\r\n    <application\r\n        android:usesCleartextTraffic=\"true\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\"\r\n        tools:targetApi=\"m\">\r\n\r\n\r\n        <activity android:name=\".LoginActivity\"/>\r\n        <activity android:name=\".DashboardActivity\" />\r\n        <activity android:name=\".RegisterActivity\" />\r\n        <activity android:name=\".UsersActivity\"/>\r\n        <activity android:name=\".MainActivity\">\r\n\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 7b0c1549a2d0c13300dfe5a605a059d4799ad33e)
+++ app/src/main/AndroidManifest.xml	(date 1609166897471)
@@ -2,36 +2,43 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     package="com.example.sailing_tracker">
-    <uses-feature android:name="android.hardware.camera"
+
+    <uses-feature
+        android:name="android.hardware.camera"
         android:required="true" />
+
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
+    <uses-permission
+        android:name="android.permission.WRITE_EXTERNAL_STORAGE"
         tools:ignore="ScopedStorage" />
     <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
+
     <application
-        android:usesCleartextTraffic="true"
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/Theme.AppCompat.Light.NoActionBar"
+        android:usesCleartextTraffic="true"
         tools:targetApi="m">
 
-
-        <activity android:name=".LoginActivity"/>
+        <activity android:name=".LoginActivity" />
         <activity android:name=".DashboardActivity" />
         <activity android:name=".RegisterActivity" />
-        <activity android:name=".UsersActivity"/>
+        <activity android:name=".UsersActivity" />
         <activity android:name=".MainActivity">
-
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
 
+
+        <meta-data
+            android:name="android.app.searchable"
+            android:resource="@xml/searchable" />
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/example/sailing_tracker/DashboardActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.sailing_tracker;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\npublic class\r\n\r\nDashboardActivity extends AppCompatActivity {\r\n\r\n    // Firebase auth\r\n    FirebaseAuth firebaseAuth;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_dashboard);\r\n\r\n\r\n        // Init\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n\r\n\r\n\r\n        // Toolbar init\r\n        final Toolbar mToolBar = findViewById(R.id.my_toolbar);\r\n        setSupportActionBar(mToolBar);\r\n        // Set default toolbar value\r\n        mToolBar.setTitle(\"Home\");\r\n\r\n        // Bottom navigation\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.navigation);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n\r\n            @SuppressLint(\"NonConstantResourceId\")\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n               switch (item.getItemId()){\r\n                   case R.id.nav_home:\r\n                       mToolBar.setTitle(\"Home\");\r\n                       HomeFragment fragment1 = new HomeFragment();\r\n                       fragment1.setArguments(getIntent().getExtras());\r\n                       getSupportFragmentManager().beginTransaction()\r\n                               .replace(R.id.fragment_container, fragment1).commit();\r\n                       break;\r\n\r\n                   case R.id.nav_record:\r\n                       mToolBar.setTitle(\"Record\");\r\n                       RecordFragment fragment2 = new RecordFragment();\r\n                       fragment2.setArguments(getIntent().getExtras());\r\n                       getSupportFragmentManager().beginTransaction()\r\n                               .replace(R.id.fragment_container, fragment2).commit();\r\n                       break;\r\n                   case R.id.nav_profile:\r\n                       mToolBar.setTitle(\"Profile\");\r\n                       ProfileFragment fragment3 = new ProfileFragment();\r\n                       fragment3.setArguments(getIntent().getExtras());\r\n                       getSupportFragmentManager().beginTransaction()\r\n                               .replace(R.id.fragment_container, fragment3).commit();\r\n                       break;\r\n\r\n               }\r\n            return true;\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        int id = item.getItemId();\r\n        if (id == R.id.action_logout) {\r\n            firebaseAuth.signOut();\r\n            checkUserStatus();\r\n        }\r\n        startActivity(new Intent(DashboardActivity.this, MainActivity.class));\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    private void checkUserStatus() {\r\n        // Get the current user\r\n        FirebaseUser user = firebaseAuth.getCurrentUser();\r\n        if (user != null){\r\n            // User is signed in stay here\r\n            // Set email of logged in user\r\n        }\r\n    }\r\n\r\n\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        getMenuInflater().inflate(R.menu.menu_main, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n// TODO: 03/12/20 UI of record\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/sailing_tracker/DashboardActivity.java	(revision 7b0c1549a2d0c13300dfe5a605a059d4799ad33e)
+++ app/src/main/java/com/example/sailing_tracker/DashboardActivity.java	(date 1609166550430)
@@ -1,24 +1,40 @@
 package com.example.sailing_tracker;
 
 import android.annotation.SuppressLint;
+import android.app.SearchManager;
+import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
 import android.view.Menu;
+import android.view.MenuInflater;
 import android.view.MenuItem;
+import android.widget.SearchView;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.Toolbar;
+import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+
+import java.util.List;
+
 public class
 
 DashboardActivity extends AppCompatActivity {
 
     // Firebase auth
     FirebaseAuth firebaseAuth;
+    private List<ModelUser> userList;
+    private RecyclerView recyclerView;
+
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -26,11 +42,11 @@
         setContentView(R.layout.activity_dashboard);
 
 
+
         // Init
         firebaseAuth = FirebaseAuth.getInstance();
 
 
-
         // Toolbar init
         final Toolbar mToolBar = findViewById(R.id.my_toolbar);
         setSupportActionBar(mToolBar);
@@ -44,32 +60,32 @@
             @SuppressLint("NonConstantResourceId")
             @Override
             public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-               switch (item.getItemId()){
-                   case R.id.nav_home:
-                       mToolBar.setTitle("Home");
-                       HomeFragment fragment1 = new HomeFragment();
-                       fragment1.setArguments(getIntent().getExtras());
-                       getSupportFragmentManager().beginTransaction()
-                               .replace(R.id.fragment_container, fragment1).commit();
-                       break;
+                switch (item.getItemId()) {
+                    case R.id.nav_home:
+                        mToolBar.setTitle("Home");
+                        HomeFragment fragment1 = new HomeFragment();
+                        fragment1.setArguments(getIntent().getExtras());
+                        getSupportFragmentManager().beginTransaction()
+                                .replace(R.id.fragment_container, fragment1).commit();
+                        break;
 
-                   case R.id.nav_record:
-                       mToolBar.setTitle("Record");
-                       RecordFragment fragment2 = new RecordFragment();
-                       fragment2.setArguments(getIntent().getExtras());
-                       getSupportFragmentManager().beginTransaction()
-                               .replace(R.id.fragment_container, fragment2).commit();
-                       break;
-                   case R.id.nav_profile:
-                       mToolBar.setTitle("Profile");
-                       ProfileFragment fragment3 = new ProfileFragment();
-                       fragment3.setArguments(getIntent().getExtras());
-                       getSupportFragmentManager().beginTransaction()
-                               .replace(R.id.fragment_container, fragment3).commit();
-                       break;
+                    case R.id.nav_record:
+                        mToolBar.setTitle("Record");
+                        RecordFragment fragment2 = new RecordFragment();
+                        fragment2.setArguments(getIntent().getExtras());
+                        getSupportFragmentManager().beginTransaction()
+                                .replace(R.id.fragment_container, fragment2).commit();
+                        break;
+                    case R.id.nav_profile:
+                        mToolBar.setTitle("Profile");
+                        ProfileFragment fragment3 = new ProfileFragment();
+                        fragment3.setArguments(getIntent().getExtras());
+                        getSupportFragmentManager().beginTransaction()
+                                .replace(R.id.fragment_container, fragment3).commit();
+                        break;
 
-               }
-            return true;
+                }
+                return true;
 
             }
 
@@ -92,22 +108,110 @@
     private void checkUserStatus() {
         // Get the current user
         FirebaseUser user = firebaseAuth.getCurrentUser();
-        if (user != null){
+        if (user != null) {
             // User is signed in stay here
             // Set email of logged in user
         }
+        else{
+            // User is not signed in
+            startActivity(new Intent(DashboardActivity.this, MainActivity.class));
+        }
     }
 
 
     public boolean onCreateOptionsMenu(Menu menu) {
         // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.menu_main, menu);
+        MenuInflater inflater = getMenuInflater();
+        inflater.inflate(R.menu.menu_main, menu);
+
+        // Associate searchable configuration with the SearchView
+
+        // Associate searchable configuration with the SearchView
+        SearchManager searchManager =
+                (SearchManager) getSystemService(Context.SEARCH_SERVICE);
+        SearchView searchView =
+                (SearchView) menu.findItem(R.id.search).getActionView();
+        searchView.setSearchableInfo(
+                searchManager.getSearchableInfo(getComponentName()));
+
         return super.onCreateOptionsMenu(menu);
+
     }
+
+    private void searchUsers(final String query) {
+        // Get current user
+        final FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
+        // Get path of database named users
+        DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference("Users");
+        // Get all data from path
+        databaseReference.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                userList.clear();
+                for (DataSnapshot ds : snapshot.getChildren()) {
+                    ModelUser modelUser = ds.getValue(ModelUser.class);
+                    // Get all searched users except one currently signed in
+                    if (!modelUser.getUid().equals(firebaseUser.getUid())) {
+                        if(modelUser.getName().toLowerCase().contains(query.toLowerCase())
+                                || modelUser.getEmail().toLowerCase().contains(query.toLowerCase())){
+                            userList.add(modelUser);
+                        }
+
+                    }
+
+
+                    AdapterUsers mAdapter = new AdapterUsers(DashboardActivity.this, userList);
+                    // Refresh adapter
+                    mAdapter.notifyDataSetChanged();
+                    // Set adapter to recycler view
+                    recyclerView.setAdapter(mAdapter);
+
+
+                }
 
+            }
 
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
 
+            }
+        });
+    }
 
+    public void getAllUsers() {
+        // Get current user
+        final FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
+        // Get path of database named users
+        DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference("Users");
+        // Get all data from path
+        databaseReference.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                userList.clear();
+                for (DataSnapshot ds : snapshot.getChildren()) {
+                    ModelUser modelUser = ds.getValue(ModelUser.class);
+                    // Get all users except one currently signed in
+                    if (!modelUser.getUid().equals(firebaseUser.getUid())) {
+                        userList.add(modelUser);
+                    }
+
+
+                    AdapterUsers mAdapter = new AdapterUsers(DashboardActivity.this, userList);
+                    recyclerView.setAdapter(mAdapter);
+
+
+                }
+
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+
+            }
+        });
+
+
+    }
 }
 
 // TODO: 03/12/20 UI of record
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/themes.xml	(date 1609158708383)
+++ app/src/main/res/values/themes.xml	(date 1609158708383)
@@ -0,0 +1,11 @@
+<resources>
+
+    <style name="NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <style name="AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <style name="PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <!-- Default screen margins, per the Android Design guidelines. -->\r\n    <dimen name=\"activity_horizontal_margin\">16dp</dimen>\r\n    <dimen name=\"activity_vertical_margin\">16dp</dimen>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision 7b0c1549a2d0c13300dfe5a605a059d4799ad33e)
+++ app/src/main/res/values/dimens.xml	(date 1609158707712)
@@ -2,4 +2,5 @@
     <!-- Default screen margins, per the Android Design guidelines. -->
     <dimen name="activity_horizontal_margin">16dp</dimen>
     <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="fab_margin">16dp</dimen>
 </resources>
\ No newline at end of file
Index: app/src/main/res/menu/menu_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n\r\n    <item android:id=\"@+id/action_logout\"\r\n        android:title=\"Logout\"\r\n        />\r\n    <item android:id=\"@+id/action_search\"\r\n        android:title=\"Search\"\r\n        android:icon=\"@android:drawable/ic_menu_search\"\r\n        app:showAsAction=\"always\"\r\n        app:actionViewClass=\"androidx.appcompat.widget.SearchView\"/>\r\n    <item android:id=\"@+id/action_showUsers\"\r\n        android:title=\"Users\"\r\n        />\r\n\r\n\r\n\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_main.xml	(revision 7b0c1549a2d0c13300dfe5a605a059d4799ad33e)
+++ app/src/main/res/menu/menu_main.xml	(date 1609166294243)
@@ -3,17 +3,15 @@
 
 
     <item android:id="@+id/action_logout"
-        android:title="Logout"
-        />
-    <item android:id="@+id/action_search"
+        android:title="Logout"/>
+
+    <item android:id="@+id/action_showUsers"
+        android:title="Users" />
+
+    <item android:id="@+id/search"
         android:title="Search"
         android:icon="@android:drawable/ic_menu_search"
-        app:showAsAction="always"
-        app:actionViewClass="androidx.appcompat.widget.SearchView"/>
-    <item android:id="@+id/action_showUsers"
-        android:title="Users"
-        />
-
-
+        app:showAsAction="collapseActionView|ifRoom"
+        app:actionViewClass="android.widget.SearchView" />
 
 </menu>
\ No newline at end of file
Index: app/src/main/res/xml/searchable.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/xml/searchable.xml	(date 1609158156390)
+++ app/src/main/res/xml/searchable.xml	(date 1609158156390)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<searchable xmlns:android="http://schemas.android.com/apk/res/android"
+    android:label="@string/app_name" />
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.sailing_tracker\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation platform('com.google.firebase:firebase-bom:25.12.0')\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.viewpager:viewpager:1.0.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'androidx.annotation:annotation:1.1.0'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    implementation 'org.jetbrains:annotations-java5:15.0'\r\n    implementation 'com.google.android.gms:play-services-auth:19.0.0'\r\n    implementation 'com.google.firebase:firebase-core:18.0.0'\r\n    implementation 'com.google.firebase:firebase-database:19.6.0'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.1'\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.0'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.1'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation \"androidx.recyclerview:recyclerview:1.1.0\"\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    testImplementation 'junit:junit:4.13'\r\n    implementation 'com.google.android.gms:play-services-basement:17.5.0'\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.github.mohammadatif:CircularImageView:1.0.1'\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 7b0c1549a2d0c13300dfe5a605a059d4799ad33e)
+++ app/build.gradle	(date 1609158708056)
@@ -41,9 +41,10 @@
     implementation 'com.google.firebase:firebase-analytics:18.0.0'
     implementation 'com.google.firebase:firebase-storage:19.2.1'
     implementation 'com.google.android.material:material:1.2.1'
-    implementation 'androidx.appcompat:appcompat:1.2.0'
     implementation "androidx.recyclerview:recyclerview:1.1.0"
     implementation "androidx.cardview:cardview:1.0.0"
+    implementation 'androidx.navigation:navigation-fragment:2.2.2'
+    implementation 'androidx.navigation:navigation-ui:2.2.2'
     testImplementation 'junit:junit:4.13'
     implementation 'com.google.android.gms:play-services-basement:17.5.0'
     implementation 'com.squareup.picasso:picasso:2.71828'
Index: app/src/main/java/com/example/sailing_tracker/ProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.sailing_tracker;\r\n\r\nimport android.Manifest;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.HashMap;\r\n\r\nimport static android.app.Activity.RESULT_OK;\r\nimport static com.google.firebase.database.FirebaseDatabase.getInstance;\r\n\r\npublic class ProfileFragment extends Fragment {\r\n\r\n    // Firebase\r\n    FirebaseAuth firebaseAuth;\r\n    FirebaseUser user;\r\n    DatabaseReference databaseReference;\r\n\r\n    // Storage\r\n    FirebaseStorage storage = FirebaseStorage.getInstance();\r\n    StorageReference storageReference = storage.getReferenceFromUrl(\"gs://sailing-tracker-ed506.appspot.com\");\r\n\r\n    // Path of profile pic storage location\r\n    String storagePath = \"User_Profile_Picture/\";\r\n\r\n    // Views from xml\r\n    ImageView profilePicIv;\r\n    TextView nameTv, emailTv, phoneTv, boatClassTv;\r\n    FloatingActionButton floatingActionButton;\r\n    Button usersBtn;\r\n\r\n    // Progress dialog\r\n    ProgressDialog progressDialog;\r\n\r\n    // Permissions constants\r\n    private static final int CAMERA_REQUEST_CODE = 100;\r\n    private static final int STORAGE_REQUEST_CODE = 200;\r\n    private static final int IMAGE_PICK_GALLERY_CODE = 300;\r\n    private static final int IMAGE_PICK_CAMERA_CODE = 400;\r\n\r\n    // Arrays of permissions to be requested\r\n    String[] cameraPermissions;\r\n    String[] storagePermissions;\r\n\r\n\r\n    // URI of picked image\r\n    Uri image_uri;\r\n\r\n    // For checking profile picture\r\n    String profilePicture;\r\n\r\n\r\n\r\n\r\n\r\n    public ProfileFragment(){\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n\r\n\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_profile, container, false);\r\n\r\n\r\n\r\n        // Init firebase\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        user = firebaseAuth.getCurrentUser();\r\n        databaseReference = getInstance().getReference(\"Users\");\r\n        storageReference = storage.getReference(\"filePathAndName\");\r\n\r\n\r\n\r\n\r\n\r\n        // Init arrays of permissions\r\n        cameraPermissions = new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n        storagePermissions = new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n\r\n        // Init views\r\n        profilePicIv = view.findViewById(R.id.profilePicIv);\r\n        nameTv = view.findViewById(R.id.nameTv);\r\n        emailTv = view.findViewById(R.id.emailTv);\r\n        phoneTv = view.findViewById(R.id.phoneTv);\r\n        floatingActionButton = view.findViewById(R.id.floatingActionButton);\r\n        boatClassTv = view.findViewById(R.id.boatClassTv);\r\n        usersBtn = view.findViewById(R.id.display_users_btn);\r\n\r\n\r\n        // init progress dialog\r\n        progressDialog = new ProgressDialog(getActivity());\r\n\r\n        /*\r\n        Get info of currently signed in user. Using email.\r\n        Using orderByChild query show detail from a node\r\n        whose key named email has value equal to email currently signed in\r\n        Search all nodes, where key matches, details will be retrieved.\r\n         */\r\n\r\n        Query query = databaseReference.orderByChild(\"email\").equalTo(user.getEmail());\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                // Check  until required data got\r\n                for (DataSnapshot ds : dataSnapshot.getChildren()) {\r\n                    // Get data\r\n                    String name = \"\" + ds.child(\"name\").getValue();\r\n                    String email = \"\" + ds.child(\"email\").getValue();\r\n                    String phone = \"\" + ds.child(\"phone\").getValue();\r\n                    String image = \"\" + ds.child(\"image\").getValue();\r\n                    String boatClass = \"\" + ds.child(\"boatClass\").getValue();\r\n\r\n                    // Set data\r\n                    nameTv.setText(name);\r\n                    emailTv.setText(email);\r\n                    phoneTv.setText(phone);\r\n                    boatClassTv.setText(boatClass);\r\n\r\n                    try {\r\n                        // If image received set to profilePic image view\r\n                        Picasso.get().load(image).into(profilePicIv);\r\n                    } catch (Exception e) {\r\n                        // Set default if exception\r\n                        Picasso.get().load(R.drawable.id_default_profile).into(profilePicIv);\r\n\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        floatingActionButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showEditProfileDialog();\r\n            }\r\n        });\r\n        // Users button click\r\n\r\n        usersBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent myIntent = new Intent(getActivity(), UsersActivity.class);\r\n                startActivity(myIntent);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        return view;\r\n    }\r\n\r\n            private boolean checkStoragePermissions(){\r\n                // Check if storage permission enabled or not\r\n                // Return true if enabled\r\n                // Return false if disabled\r\n\r\n                boolean result = ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n                        == (PackageManager.PERMISSION_GRANTED);\r\n                return result;\r\n\r\n            }\r\n\r\n            private void requestStoragePermissions(){\r\n                requestPermissions(storagePermissions, STORAGE_REQUEST_CODE);\r\n            }\r\n\r\n            private boolean checkCameraPermissions(){\r\n                // Check if storage permission enabled or not\r\n                // Return true if enabled\r\n                // Return false if disableD\r\n                boolean result = ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n                        == (PackageManager.PERMISSION_GRANTED);\r\n\r\n                boolean result1 = ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.CAMERA)\r\n                        == (PackageManager.PERMISSION_GRANTED);\r\n                return result && result1;\r\n\r\n            }\r\n\r\n            private void requestCameraPermissions(){\r\n                requestPermissions(cameraPermissions, CAMERA_REQUEST_CODE);\r\n            }\r\n\r\n            private void showEditProfileDialog() {\r\n                // Edit profile pic\r\n                // Edit name\r\n                // Edit boat class\r\n\r\n                String[] options = {\"Edit profile picture\", \"Edit name\", \"Edit boat class\"};\r\n                // Alert dialog\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                builder.setTitle(\"Edit profile\");\r\n\r\n                // Set linear layout\r\n                LinearLayout linearLayout = new LinearLayout(getActivity());\r\n\r\n                builder.setItems(options, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        // Handle item clicks\r\n                        if(which == 0){\r\n                            // Edit Profile picture clicked\r\n                            progressDialog.setMessage(\"Updating profile picture\");\r\n                            profilePicture = \"image\";\r\n                            showProfilePicDialog();\r\n                        }\r\n                        else if (which == 1){\r\n                            // Edit name picked\r\n                            progressDialog.setMessage(\"Updating name\");\r\n                            showNameBoatClassUpdateDialog(\"name\");\r\n                        }\r\n                        else if (which == 2 ){\r\n                            // Edit boat class picked\r\n                            progressDialog.setMessage(\"Updating boat class\");\r\n                            showNameBoatClassUpdateDialog(\"boatClass\");\r\n                        }\r\n                    }\r\n                });\r\n                // Create and show dialog\r\n                builder.create().show();\r\n            }\r\n\r\n    private void showNameBoatClassUpdateDialog(final String key) {\r\n        String[] options = {\"Edit boat class\", \"Edit name\"};\r\n        // Alert dialog\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n        builder.setTitle(\"Update \" + key);\r\n\r\n        // Set linear layout\r\n\r\n        LinearLayout linearLayout = new LinearLayout(getActivity());\r\n        linearLayout.setOrientation(LinearLayout.VERTICAL);\r\n        linearLayout.setPadding(10,10,10,10);\r\n        // Add edit text\r\n        final EditText editText = new EditText(getActivity());\r\n        editText.setHint(\"Enter \" +key);\r\n        linearLayout.addView(editText);\r\n\r\n        builder.setView(linearLayout);\r\n\r\n\r\n        // Add button to update\r\n        builder.setPositiveButton(\"Update\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                // Input text from editText\r\n                String value = editText.getText().toString().trim();\r\n                // Presence check\r\n                if (!TextUtils.isEmpty(value)){\r\n                    HashMap<String, Object> result = new HashMap<>();\r\n                    result.put(key, value);\r\n\r\n                    databaseReference.child(user.getUid()).updateChildren(result)\r\n                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n                                    progressDialog.dismiss();\r\n                                    Toast.makeText(getActivity(), \"Updated...\", Toast.LENGTH_SHORT).show();\r\n\r\n                                }\r\n                            })\r\n                            .addOnFailureListener(new OnFailureListener() {\r\n                                @Override\r\n                                public void onFailure(@NonNull Exception e) {\r\n                                    Toast.makeText(getActivity(), \"\"+e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n\r\n                } else {\r\n                    Toast.makeText(getActivity(), \"Please enter \" + key +\"\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        // Add button to cancel\r\n        builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // Create and show dialog\r\n        builder.create().show();\r\n\r\n    }\r\n\r\n    private void showProfilePicDialog() {\r\n                String[] options = {\"Camera\", \"Gallery\"};\r\n                // Alert dialog\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                builder.setTitle(\"Image from\");\r\n\r\n                builder.setItems(options, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        // Handle item clicks\r\n                        if(which == 0){\r\n                            // Camera picked\r\n                           if(!checkCameraPermissions()){\r\n                               requestCameraPermissions();\r\n                           } else {\r\n                               pickFromCamera();\r\n                           }\r\n                        }\r\n                        else if (which == 1) {\r\n                            if (!checkStoragePermissions()) {\r\n                                requestStoragePermissions();\r\n                            } else {\r\n                                pickFromGallery();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n\r\n                // Create and show dialog\r\n                builder.create().show();\r\n\r\n            }\r\n            @Override\r\n            public void onRequestPermissionsResult(int requestCode, @NotNull String[] permissions,\r\n                                                   @NotNull int[] grantResults) {\r\n                //Method to allow users to allow or deny permissions\r\n                switch (requestCode) {\r\n                    case CAMERA_REQUEST_CODE: {\r\n                        // If request is cancelled, the result arrays are empty.\r\n                        if (grantResults.length > 0) {\r\n                            boolean cameraAccepted = grantResults[0] == PackageManager.PERMISSION_GRANTED;\r\n                            boolean writeStorageAccepted = grantResults[1] == PackageManager.PERMISSION_GRANTED;\r\n                            if (cameraAccepted && writeStorageAccepted) {\r\n                                pickFromCamera();\r\n                            }\r\n                            // Permission is granted. Continue the action\r\n                        } else {\r\n                            // Permission denied\r\n                            Toast.makeText(getActivity(), \"Please enable permissions\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        return;\r\n                    }\r\n                    case STORAGE_REQUEST_CODE: {\r\n                        // If request is cancelled, the result arrays are empty\r\n                        if (grantResults.length > 0) {\r\n                            boolean writeStorageAccepted = grantResults[1] == PackageManager.PERMISSION_GRANTED;\r\n                            if (writeStorageAccepted) {\r\n                                pickFromGallery();\r\n\r\n                            }\r\n                            // Permission is granted. Continue the action\r\n                        } else {\r\n                            // Permission denied\r\n                            Toast.makeText(getActivity(), \"Please enable permissions\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n                super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n\r\n            }\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        // Method to be called after picking image from camera or gallery\r\n        if(resultCode == RESULT_OK){\r\n            if(requestCode == IMAGE_PICK_GALLERY_CODE){\r\n                // Image picked fromm gallery, get uri of image\r\n                image_uri = data.getData();\r\n                uploadProfilePicture(image_uri);\r\n            }\r\n            if(requestCode == IMAGE_PICK_CAMERA_CODE){\r\n                // Image picked from camera, get uri of image\r\n\r\n                uploadProfilePicture(image_uri);\r\n            }\r\n        }\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\n    private void uploadProfilePicture(Uri image_uri) {\r\n        progressDialog.show();\r\n        // Path and name of image to be stored in firebase storage\r\n        String filePathAndName = storagePath+ \"\"+ profilePicture + \"_\"+ user.getUid();\r\n        StorageReference storageReference2 = storage.getReference();\r\n        StorageReference fileRef = storageReference2.child(filePathAndName);\r\n        fileRef.putFile(image_uri)\r\n                 .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                        // Image is uploaded to storage, now get uri and store in user's database\r\n                        Task<Uri> uriTask= taskSnapshot.getStorage().getDownloadUrl();\r\n                        while  (!uriTask.isSuccessful());\r\n                        Uri downloadUri = uriTask.getResult();\r\n\r\n                        // Check if image is uploaded and url received\r\n                        if  (uriTask.isSuccessful()) {\r\n\r\n                            /*\r\n                            First parameter is profilePicture that has value \"image\" which is a key in the user's database where\r\n                            url of the image will be saved to\r\n                            Second parameter contains the url of the image stored in th firebase storage, this url will be saved as value\r\n                            against key \"image\"\r\n                             */\r\n\r\n                            // Image uploaded successfully\r\n                            // Add update the url in user's database\r\n                            HashMap<String, Object> results = new HashMap<>();\r\n\r\n                            assert downloadUri != null;\r\n                            results.put(profilePicture, downloadUri.toString());\r\n\r\n                            databaseReference.child(user.getUid()).updateChildren(results)\r\n                                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                        @Override\r\n                                        public void onSuccess(Void aVoid) {\r\n                                            // Url has successfully been uploaded\r\n                                            // Dismiss the progress bar\r\n                                            progressDialog.dismiss();\r\n                                            Toast.makeText(getActivity(), \"Image updated...\", Toast.LENGTH_SHORT).show();\r\n\r\n                                        }\r\n                                    }).addOnFailureListener(new OnFailureListener() {\r\n                                @Override\r\n                                public void onFailure(@NonNull Exception e) {\r\n                                    // Error has occurred adding url to database of user\r\n                                    // Dismiss progress bar\r\n                                    progressDialog.dismiss();\r\n                                    Toast.makeText(getActivity(), \"Error updating image\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                        } else {\r\n                            // Error\r\n                            progressDialog.dismiss();\r\n                            Toast.makeText(getActivity(), \"An error occurred\", Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        // error has occurred, show error message\r\n                        progressDialog.dismiss();\r\n                        Toast.makeText(getActivity(), e.getMessage(), Toast.LENGTH_SHORT).show();\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n\r\n    private void pickFromGallery() {\r\n        // Pick an image from phone gallery\r\n        Intent galleryIntent = new Intent();\r\n        galleryIntent.setType(\"image/*\");\r\n        galleryIntent.setAction(Intent.ACTION_GET_CONTENT);\r\n        startActivityForResult(Intent.createChooser(galleryIntent, \"Pick image\"), IMAGE_PICK_GALLERY_CODE);\r\n\r\n\r\n    }\r\n\r\n    private void pickFromCamera() {\r\n        ContentValues values = new ContentValues();\r\n        values.put(MediaStore.Images.Media.TITLE, \"Temp pic\");\r\n        values.put(MediaStore.Images.Media.DESCRIPTION, \"Temp description\");\r\n\r\n        // Put image uri\r\n        image_uri = getActivity().getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);\r\n\r\n        // Intent to start camera\r\n        Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        cameraIntent.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);\r\n        startActivityForResult(cameraIntent, IMAGE_PICK_CAMERA_CODE);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n// TODO: 17/12/2020 Error with google auth\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/sailing_tracker/ProfileFragment.java	(revision 7b0c1549a2d0c13300dfe5a605a059d4799ad33e)
+++ app/src/main/java/com/example/sailing_tracker/ProfileFragment.java	(date 1609155422544)
@@ -82,24 +82,16 @@
     String[] cameraPermissions;
     String[] storagePermissions;
 
-
     // URI of picked image
     Uri image_uri;
 
     // For checking profile picture
     String profilePicture;
 
-
-
-
-
     public ProfileFragment(){
         // Required empty public constructor
     }
 
-
-
-
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         // Inflate the layout for this fragment
Index: app/src/main/res/navigation/nav_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/navigation/nav_graph.xml	(date 1609158708503)
+++ app/src/main/res/navigation/nav_graph.xml	(date 1609158708503)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<navigation xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/nav_graph"
+    app:startDestination="@id/FirstFragment">
+
+    <fragment
+        android:id="@+id/FirstFragment"
+        android:name="com.example.sailing_tracker.FirstFragment"
+        android:label="@string/first_fragment_label"
+        tools:layout="@layout/fragment_first">
+
+        <action
+            android:id="@+id/action_FirstFragment_to_SecondFragment"
+            app:destination="@id/SecondFragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/SecondFragment"
+        android:name="com.example.sailing_tracker.SecondFragment"
+        android:label="@string/second_fragment_label"
+        tools:layout="@layout/fragment_second">
+
+        <action
+            android:id="@+id/action_SecondFragment_to_FirstFragment"
+            app:destination="@id/FirstFragment" />
+    </fragment>
+</navigation>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">Sailing tracker</string>\r\n\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"swipe_left_for_register\">Swipe Left for Register</string>\r\n    <string name=\"login\">Login</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"e_mail\">Email</string>\r\n    <string name=\"tag\">Welcome to start recording please Login</string>\r\n    <string name=\"swipe_right_for_login\">Swipe Right for Login</string>\r\n    <string name=\"register\">Register</string>\r\n    <string name=\"re_type_password\">Re-type Password</string>\r\n    <string name=\"your_name\">Full Name</string>\r\n    <string name=\"title_activity_login\">LoginActivity</string>\r\n    <string name=\"prompt_email\">Email</string>\r\n    <string name=\"prompt_password\">Password</string>\r\n    <string name=\"action_sign_in\">Sign in or register</string>\r\n    <string name=\"action_sign_in_short\">Sign in</string>\r\n    <string name=\"welcome\">\"Welcome !\"</string>\r\n    <string name=\"invalid_username\">Not a valid username</string>\r\n    <string name=\"invalid_password\">Password must be >5 characters</string>\r\n    <string name=\"login_failed\">\"Login failed\"</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision 7b0c1549a2d0c13300dfe5a605a059d4799ad33e)
+++ app/src/main/res/values/strings.xml	(date 1609158707843)
@@ -21,4 +21,13 @@
     <string name="invalid_username">Not a valid username</string>
     <string name="invalid_password">Password must be >5 characters</string>
     <string name="login_failed">"Login failed"</string>
+    <string name="title_activity_search_result">SearchResultActivity</string>
+    <!-- Strings used for fragments for navigation -->
+    <string name="first_fragment_label">First Fragment</string>
+    <string name="second_fragment_label">Second Fragment</string>
+    <string name="next">Next</string>
+    <string name="previous">Previous</string>
+
+    <string name="hello_first_fragment">Hello first fragment</string>
+    <string name="hello_second_fragment">Hello second fragment. Arg: %1$s</string>
 </resources>
\ No newline at end of file
